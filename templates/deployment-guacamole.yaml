apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "guacamole.fullname" . }}-guacamole
  labels:
{{ include "guacamole.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "guacamole.name" . }}-guacamole
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "guacamole.name" . }}-guacamole
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      priorityClassName: "{{ .Values.priorityClassName }}"
    {{- with .Values.guacamole.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      serviceAccountName: {{ template "guacamole.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: create-init-db
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.guacamole.image.repository }}:{{ tpl .Values.guacamole.image.tag . }}"
          imagePullPolicy: {{ .Values.guacamole.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "guacamole.fullname" . }}
          volumeMounts:
            - name: initdb
              mountPath: /data
          command: ["/bin/sh"]
          args:
            - -c
            - |
              cat /opt/guacamole/postgresql/schema/001-create-schema.sql  > /data/initdb.sql
              cat /opt/guacamole/postgresql/schema/002-create-admin-user.sql  > /data/initdb-create-admin.sql
#             /opt/guacamole/bin/initdb.sh --postgres > /data/initdb.sql
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: loaddb
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.dbcreation.image.repository }}:{{ .Values.dbcreation.image.tag }}"
          imagePullPolicy: {{ .Values.dbcreation.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "guacamole.fullname" . }}
          volumeMounts:
            - name: initdb
              mountPath: /data
          command: ["/bin/sh"]
          args:
            - -c
            - |
              export PGPASSWORD=$POSTGRES_PASSWORD
              echo ==================================================== Initializing the DB
              # most likely already created, so don't fail, just log and move on
              psql -h $POSTGRES_HOSTNAME -d $POSTGRES_DATABASE -U $POSTGRES_USER -p $POSTGRES_PORT -a -w -f /data/initdb.sql || true
              echo ==================================================== Creating the admin user
              echo Setting the username... 
              sed -i -e "s/guacadmin/$ADMIN_USERNAME/g" /data/initdb-create-admin.sql
              echo Generating a random salt for the password hash...
              export ADMIN_PASSWORD_SALT=$(echo -n $RANDOM | sha256sum | head -c 64 | tr '[:lower:]' '[:upper:]')
              if [ -z "$ADMIN_PASSWORD" ]; then
                export ADMIN_PASSWORD=$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-16};echo;)
                echo "Password not especified, so it has been randomly generated: $ADMIN_PASSWORD"
              fi
              echo Calculating the password hash...
              export ADMIN_PASSWORD_HASH=$(echo -n "${ADMIN_PASSWORD}${ADMIN_PASSWORD_SALT}" | sha256sum | head -c 64 | tr '[:lower:]' '[:upper:]')
              echo Setting the password hash and salt...
              sed -i -e "s/CA458A7D494E3BE824F5E1E175A1556C0F8EEF2C2D7DF3633BEC4A29C4411960/$ADMIN_PASSWORD_HASH/g" /data/initdb-create-admin.sql
              sed -i -e "s/FE24ADC5E11E2B25288D1704ABE67A79E342ECC26064CE69C5B3177795A82264/$ADMIN_PASSWORD_SALT/g" /data/initdb-create-admin.sql
              echo Inserting in the DB...
              psql -h $POSTGRES_HOSTNAME -d $POSTGRES_DATABASE -U $POSTGRES_USER -p $POSTGRES_PORT -a -w -f /data/initdb-create-admin.sql || true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.guacamole.image.repository }}:{{ tpl .Values.guacamole.image.tag . }}"
          imagePullPolicy: {{ .Values.guacamole.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "guacamole.fullname" . }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
              #          livenessProbe:
              #            httpGet:
              #              path: /
              #              port: http
              #          readinessProbe:
              #            httpGet:
              #              path: /
              #              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: initdb
          emptyDir: {}
