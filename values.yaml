# Default values for guacamole.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

guacamole:
  image:
    repository: guacamole/guacamole
    tag: "{{ .Chart.AppVersion }}"
    pullPolicy: IfNotPresent

guacd:
  image:
    repository: guacamole/guacd
    tag: "{{ .Chart.AppVersion }}"
    pullPolicy: IfNotPresent

dbcreation:
  # This is for an initContainer which connects to the database and initializes it creating the tables and the admin user.
  # If the database is already initialized the (expected) errors due to duplication are written in the log but the execution continues.
  image:
    repository: bitnami/postgresql
    tag: 11.12.0-debian-10-r5
    pullPolicy: IfNotPresent
  # The username of the admin user that will be created in DB with permissions to do everything.
  # If there is a user in the OIDC service with the same username (claim specified in OIDC.username_claim_type), then it will be able to 
  # access with the OIDC credentials.
  adminUsername: guacadmin
  # This is the local password (in DB), which can be used to access the REST API (see extension-priority).
  # If empty, it will be randomly generated for security reasons.
  # Apart from that, the user will be able to access using OIDC if there is an account in that external service matching the username.
  # The OIDC credentials for this user can be different from this password. 
  adminLocalPassword: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/proxy-body-size: 100000m
    # nginx.ingress.kubernetes.io/rewrite-target: /guacamole/$1
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

priorityClassName: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

postgres:
  hostname: "postgresql"
  port: "5432"
  database: "guacamole"
  user: "guacamole"
  password: "password"

OIDC:
  authorization_endpoint: "XXXXXX"
  jwks_endpoint: "XXXXXX"
  issuer: "XXXXXX"
  clientID: "XXXXXX"
  redirect_uri: "XXXXXX"
  username_claim_type: "username" # username, sub, email

# Set to 'postgresql' if you want the users be able to access the REST API with the local password (saved in the DB), and not require OIDC authentication.
# Otherwise you can set to 'openid'.
extension-priority: "postgresql"

